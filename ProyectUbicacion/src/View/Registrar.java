/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.CiudadC;
import Controller.ContinenteC;
import Controller.EstadoC;
import Controller.PaisC;
import Model.Entity.Ciudad;
import Model.Entity.Continente;
import Model.Entity.Estado;
import Model.Entity.Pais;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author juan
 */
public class Registrar extends javax.swing.JFrame {

    /**
     * Creates new form Registrar
     */
    public Registrar() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.SelectComboBox();
        jComboBox1.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    SelectComboBox();
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        codigoPostalTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        descripcionTxt = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        ubicacion = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Continente", "Pais", "Estado", "Ciudad" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Qué desea ingresar?");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jToggleButton1.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton1.setText("Registrar");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Codigo postal");

        codigoPostalTxt.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Descripcion");

        descripcionTxt.setForeground(new java.awt.Color(255, 255, 255));
        descripcionTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionTxtActionPerformed(evt);
            }
        });

        jComboBox2.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(codigoPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(descripcionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descripcionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigoPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 99, 360, -1));

        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("<Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 310, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Registrar");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/f219c8f84503eee32016a115be66a4f4.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        String valorSeleccionado = (String) jComboBox1.getSelectedItem();
        String Seleccionado = (String) jComboBox2.getSelectedItem();

        // Limpia la selección en jComboBox2
        jComboBox2.setSelectedIndex(0); // Esto establece la selección en el primer elemento

        System.out.println("View.Registrar.jToggleButton1ActionPerformed()" + Seleccionado);

        try {

            String Continente;

            String pais;
            String Estado;
            String Ciudad;

            // Captura de datos de entrada
            if ("Pais".equals(valorSeleccionado)) {
                String descripcion1;
                String codigoPostal1;

                codigoPostal1 = codigoPostalTxt.getText();
                descripcion1 = descripcionTxt.getText();
                PaisC agregarpais = new PaisC();

                agregarpais.GuardarRegistro(codigoPostal1, descripcion1, Seleccionado);
            } else if ("Estado".equals(valorSeleccionado)) {
                String descripcion;
                String codigoPostal;

                codigoPostal = codigoPostalTxt.getText();
                descripcion = descripcionTxt.getText();
                EstadoC agregarEstado = new EstadoC();

                jComboBox1.setSelectedIndex(0); // Establecer la selección en el primer elemento
                jComboBox2.removeAllItems(); // Eliminar todos los elementos del jComboBox2
                descripcionTxt.setText("");
                codigoPostalTxt.setText("");
                agregarEstado.Agregar(codigoPostal, descripcion, Seleccionado);
            } else if ("Ciudad".equals(valorSeleccionado)) {
                String descripcion;
                String codigoPostal;

                codigoPostal = codigoPostalTxt.getText();
                descripcion = descripcionTxt.getText();
                CiudadC agregarCiudad = new CiudadC();
                agregarCiudad.GuardarRegistro(codigoPostal, descripcion, Seleccionado);
            } else if ("Continente".equals(valorSeleccionado)) {
                String descripcion;
                String codigoPostal;
                jComboBox2.setVisible(false);
                codigoPostal = codigoPostalTxt.getText();
                descripcion = descripcionTxt.getText();
                ContinenteC agregarpais = new ContinenteC();
                agregarpais.GuardarRegistro(codigoPostal, descripcion);
            }

            // Limpia las cajas de texto después de enviar los datos
            descripcionTxt.setText("");
            codigoPostalTxt.setText("");

            descripcionTxt.setText("");
            codigoPostalTxt.setText("");

            // Reiniciar los componentes a su estado inicial
            resetearComponentes();
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        String valSeleccionado = (String) jComboBox1.getSelectedItem();
        System.out.println("View.Registrar.jToggleButton1ActionPerformed()" + valSeleccionado);
        switch (valSeleccionado) {
            case "Pais":
                jComboBox2.setVisible(true);

                break;

            case "Estado":
                jComboBox2.setVisible(true);

                break;
            case "Ciudad":
                jComboBox2.setVisible(true);

                break;

            case "Continente":
                jComboBox2.setVisible(false);

                break;
            default:

        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void descripcionTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descripcionTxtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        LugaresV jframe = new LugaresV();
        jframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registrar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codigoPostalTxt;
    private javax.swing.JTextField descripcionTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel ubicacion;
    // End of variables declaration//GEN-END:variables
 /*
  public void AutocompleteCiudad() {
      ubicacion.setText("Continente Id:");
       	      // Add a document listener to the text field
    jTextField1.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            update();
        }
        @Override
        public void removeUpdate(DocumentEvent e) {
            update();
        }
        @Override
        public void changedUpdate(DocumentEvent e) {
            update();
        }

        private void update() {
            // Get the user's input
            String input = jTextField1.getText();
            // Clear the combo box
            jComboBox2.removeAllItems();
            // Get the suggestions from the database
            ArrayList<String> suggestions;
            suggestions = getSuggestions(input);
            // Add the suggestions to the combo box
            for (String suggestion : suggestions) {
                if (suggestion.contains(input)) {
                    jComboBox2.addItem(suggestion);
                }
            }
          // Show the combo box
            jComboBox2.setPopupVisible(true);
        }

    private ArrayList<String> getSuggestions(String input) {
    ArrayList<String> suggestions = new ArrayList<>();
   
        try {
            // Connect to the database
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ubicacion", "root", "root");
            // Create a statement to query the database
            Statement stmt = conn.createStatement();
            // Execute the query and get the results
            ResultSet rs = stmt.executeQuery("SELECT nombre  FROM categoria WHERE nombre LIKE '%" + input + "%';");
            // Loop through the results and add them to the list of suggestions
            while (rs.next()) {
                suggestions.add(rs.getString("nombre"));
            }
            // Close the connection and statement
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return suggestions;
    }     
});
setVisible(true);
}*/
private void ComboBoxIdContinente() {
        jComboBox2.setVisible(true);
        ubicacion.setText("Selecione Continente");
        ContinenteC controlador = new ContinenteC();
        ArrayList<Continente> listaDeProductos = controlador.ConsultarRegistro();

        jComboBox2.removeAllItems();

        for (int i = 0; i < listaDeProductos.size(); i++) {
            jComboBox2.addItem(String.valueOf(listaDeProductos.get(i).getDescripcion()));
        }
    }

    private void ComboBoxIdPais() {
        jComboBox2.setVisible(true);
        ubicacion.setText("Seleccione pais");
        PaisC controlador = new PaisC();
        ArrayList<Pais> listaDeProductos = controlador.ConsultarRegistro();

        jComboBox2.removeAllItems();

        for (int i = 0; i < listaDeProductos.size(); i++) {
            jComboBox2.addItem(String.valueOf(listaDeProductos.get(i).getDescripcion()));
        }
    }

    private void ComboBoxIdeEstado() {
        jComboBox2.setVisible(true);
        ubicacion.setText("Seleccione estado");
        EstadoC controlador = new EstadoC();
        ArrayList<Estado> listaDeProductos = controlador.ConsultarRegistro();

        jComboBox2.removeAllItems();

        for (int i = 0; i < listaDeProductos.size(); i++) {
            jComboBox2.addItem(String.valueOf(listaDeProductos.get(i).getDescripcion()));
        }
    }



    private void resetearComponentes() {
        // Reiniciar los componentes a su estado inicial

        // Reiniciar los componentes a su estado inicial
        jComboBox1.setSelectedIndex(0); // Establecer la selección en el primer elemento
        jComboBox2.removeAllItems(); // Eliminar todos los elementos del jComboBox2
        descripcionTxt.setText("");
        codigoPostalTxt.setText("");
    }

    private void SelectComboBox() {
        String valSeleccionado = (String) jComboBox1.getSelectedItem();
        System.out.println("View.Registrar.jToggleButton1ActionPerformed()" + valSeleccionado);
        switch (valSeleccionado) {
            case "Pais":
                //AutocompleteContinente();
                ComboBoxIdContinente();
                break;

            case "Estado":
                //AutocompletePais();
                ComboBoxIdPais();
                break;
            case "Ciudad":
                //AutocompleteEstado();
                ComboBoxIdeEstado();
                break;

            case "Continente":

                break;
            default:

        }
    }

}
